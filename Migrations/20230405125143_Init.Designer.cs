// <auto-generated />
using System;
using KioskManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KioskManager.Migrations
{
    [DbContext(typeof(KioskManagerContext))]
    [Migration("20230405125143_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("KioskManager.Models.Kiosk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActualIPAddress")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastOnline")
                        .HasColumnType("TEXT");

                    b.Property<string>("PCId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Registered")
                        .HasColumnType("TEXT");

                    b.Property<string>("SettingHomePage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SettingHostName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SettingKioskConfig")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SettingRefreshPage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SettingRootPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SettingRtcWake")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SettingScheduledAction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SettingScreenSettings")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SettingTimeZone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("isOnline")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Kiosk");
                });
#pragma warning restore 612, 618
        }
    }
}
